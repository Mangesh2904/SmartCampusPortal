version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: smart-campus-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: college-portal
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - smart-campus-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: smart-campus-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/college-portal?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      CLIENT_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - backend_uploads:/app/backend/uploads
    networks:
      - smart-campus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (served by backend in production)
  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend
    container_name: smart-campus-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - smart-campus-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: smart-campus-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - smart-campus-network
    profiles:
      - production

  # Redis for Session Storage (Optional)
  redis:
    image: redis:7-alpine
    container_name: smart-campus-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smart-campus-network
    profiles:
      - production
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  backend_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  smart-campus-network:
    driver: bridge

# Development override
# Use: docker-compose -f docker-compose.yaml -f docker-compose.dev.yaml up
---
# docker-compose.dev.yaml (for development)
version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongodb:27017/college-portal
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      VITE_API_URL: http://localhost:5000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - "5173:5173"

  mongodb:
    environment:
      MONGO_INITDB_ROOT_USERNAME: ""
      MONGO_INITDB_ROOT_PASSWORD: ""
